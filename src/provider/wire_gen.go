// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package provider

import (
	rock_peper_scissors2 "github.com/pt-suzuki/grpc_template/src/controllers/rock_peper_scissors"
	"github.com/pt-suzuki/grpc_template/src/domains/rock_peper_scissors"
	"github.com/pt-suzuki/grpc_template/src/provider/pb_provider"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func Wire(db *gorm.DB) *Providers {
	translator := rock_peper_scissors.TranslatorImpl()
	repository := rock_peper_scissors.RepositoryImpl(translator, db)
	useCase := rock_peper_scissors.UseCaseImpl(translator, repository)
	playGameResponder := rock_peper_scissors2.PlayGameResponderImpl(translator)
	playGameAction := rock_peper_scissors2.PlayGameActionImpl(useCase, translator, playGameResponder)
	reportTranslator := rock_peper_scissors.ReportTranslatorImpl(translator)
	reportUseCase := rock_peper_scissors.ReportUseCaseImpl(reportTranslator, useCase)
	reportMatchResultsResponder := rock_peper_scissors2.ReportMatchResultsResponderImpl(reportTranslator)
	reportMatchResultsAction := rock_peper_scissors2.ReportMatchResultsActionImpl(reportUseCase, reportTranslator, reportMatchResultsResponder)
	rockPaperScissorsProvider := pb_provider.RockPaperScissorsProviderImpl(playGameAction, reportMatchResultsAction)
	providers := ProvidersImpl(rockPaperScissorsProvider)
	return providers
}
